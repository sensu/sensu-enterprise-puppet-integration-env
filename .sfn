Configuration.new do
  sparkle_pack [
    'sparkle-pack-aws-availability-zones',
    'sparkle-pack-aws-vpc',
    'sparkle-pack-aws-amis',
    'sparkle-pack-sensu-enterprise'
  ]
  callbacks do
    require ['sfn-serverspec']
    default ['serverspec_validator']
  end
  sfn_serverspec do
    global_spec_patterns [File.join(Dir.pwd, 'spec/base/*_spec.rb')]
    ssh_user 'ubuntu'
    ssh_key_paths [ ENV['AWS_KEY_PATH'] ]
  end
  #   Set style of stack nesting
  apply_nesting 'deep'
  #   Enable processing of SparkleFormation templates
  processing true
  #   Provider specific options used when creating
  #   new stacks. Options defined here are AWS specific.
  options do
    on_failure 'nothing'
    notification_topics []
    capabilities ['CAPABILITY_IAM']
    tags do
      creator ENV['USER']
    end
  end
  #   Name of bucket in object store to hold nested
  #   stack templates
  nesting_bucket ENV['NESTING_BUCKET']
  #   Prefix used on generated template path prior to storage
  #   in the object store
  # nesting_prefix 'nested-templates'
  #   Remote provider credentials
  credentials do
    #  Remote provider name (:aws, :azure, :open_stack, :rackspace)
    provider :aws
    #  AWS credentials information
    aws_access_key_id ENV['AWS_ACCESS_KEY_ID']
    aws_secret_access_key ENV['AWS_SECRET_ACCESS_KEY']
    aws_region ENV['AWS_REGION']
    aws_bucket_region ENV['AWS_BUCKET_REGION'] || ENV['AWS_REGION']
    # aws_sts_role_arn ENV['AWS_STS_ROLE_ARN']
  end
end
